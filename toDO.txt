To do 

TOKENをファイルから読み込もう！
ファイル分割の方法を学ぼう！(mainファイルと機能ごとのサブファイルに分けよう！)
Viewでボタン(ボタンクラスをつくってView=でsendmessageに突っ込もう！)を作ろう！
pollコマンドを完成させよう！
予測変換をつっこめ！
便利にしろ！

メモ

コマンド認識→内容確認とボタンの表示→押下で分岐  →　OKならpollメッセージの表示
                                         →　cancelなら終了

設計
mainファイル
    commandデコレータ：コマンドの実装

UI_kitファイル
    confirm_buttonクラス(discord.ui.view)
        __init__関数(self, arg_str, arg_int)：self, arg_str, arg_intを引数に
            super().__init__(timeout=None)：timeoutをNoneに設定
        
        ui.buttonデコレータ：OKボタンの設置
            OK_button_callback関数：async関数
                disable_button関数
                await interaction.response.send_message(enbed=self.make_poll_embed(self), ephemeral=True))
        
        ui.buttonデコレータ：NOボタンの設置
            Cancel_button_callback関数：async関数
                disable_button関数
                await interaction.response.send_message("作成中の投票を削除しました", ephemeral=True)
        
        make_poll_embed関数：投票内容を表示するembedを作成
            embed=discord.Embed(title=title,
                                color=discord.color.purple,
                                description="message" 
            )

    

timeファイル

discord_funcファイル
    unify_arg関数：得た引数をarg_str, arg_intにまとめる    
    get_author_info関数：authorの情報を取得する


期限設定の仕様 -> int
・s, m, h, d の４変数で受け取る(maxは７day?) 
・option引数
    -変数が未入力のときは/endpollを使って終了する設定にする
    -変数が一つ以上のとき、未設定の変数は０扱い→d, h, m, s合計の時間後に勝手に閉じて集計を表示する

票数の仕様 -> int
・一人が何個まで投票できるか決める
・option引数
    -defaultは1
    -選択肢の数を超えるときは、選択肢の数に同期する→buttonが複数回押下できるなら、この処理は消す

ロールの仕様：できたらやる
・投票権を特定ロールのみに付与
・option引数
    -defaultはeveryone

----
入退室管理
借りた　一時退室　入室予定　返した

入室中：green
一時退室中：orange
入室予定：blue
→replyで入室予定時刻を送信 日付が変わるor付属したボタンが押された(入室した)時に消去
退室(人いない)：red

スレッドを作ってそこに１日ごとに記録(入退室時間)を送信する

入室予定→ephermalで時間指定(n限で選択)する
